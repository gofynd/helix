name: Deploy to Cloudflare Containers

on:
  push:
    branches: [ main, develop, feature/cf-container/improvements ]
  pull_request:
    branches: [ main ]

env:
  CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test
      if: github.event_name == 'pull_request'

    - name: Install Wrangler CLI
      run: npm install -g wrangler

    - name: Login to Cloudflare
      run: wrangler auth login --api-token ${{ secrets.CLOUDFLARE_API_TOKEN }}

    - name: Build Docker image
      run: |
        docker build -t ${{ github.repository }}:${{ github.sha }} .

    - name: Deploy to Cloudflare
      run: |
        wrangler deploy --compatibility-date $(date +%Y-%m-%d)
      env:
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

    - name: Verify deployment
      run: |
        # Wait for deployment to be ready
        sleep 30
        
        # Test worker health
        curl -f https://${{ github.event.repository.name }}.${{ secrets.CLOUDFLARE_SUBDOMAIN }}.workers.dev/__worker_ok || exit 1
        
        # Test container health
        curl -f https://${{ github.event.repository.name }}.${{ secrets.CLOUDFLARE_SUBDOMAIN }}.workers.dev/health || exit 1

    - name: Comment deployment status
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            issue_number: context.issue.number,
          });
          
          const botComment = comments.find(comment => 
            comment.user.type === 'Bot' && 
            comment.body.includes('üöÄ Cloudflare Deployment Status')
          );
          
          const commentBody = `üöÄ **Cloudflare Deployment Status**
          
          ‚úÖ **Deployment Successful**
          - Worker URL: https://${{ github.event.repository.name }}.${{ secrets.CLOUDFLARE_SUBDOMAIN }}.workers.dev
          - Commit: \`${{ github.sha }}\`
          - Branch: \`${{ github.ref_name }}\`
          - Status: All health checks passed
          
          üîç **Test Endpoints:**
          - Worker Health: \`/__worker_ok\`
          - Container Health: \`/health\`
          - Main App: \`/\``;
          
          if (botComment) {
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              issue_number: context.issue.number,
              comment_id: botComment.id,
              body: commentBody
            });
          } else {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              issue_number: context.issue.number,
              body: commentBody
            });
          }

  security-scan:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  notify:
    runs-on: ubuntu-latest
    needs: [build-and-deploy]
    if: always() && github.ref == 'refs/heads/main'
    
    steps:
    - name: Notify deployment status
      uses: 8398a7/action-slack@v3
      if: always()
      with:
        status: ${{ job.status }}
        channel: '#deployments'
        webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
        fields: repo,message,commit,author,action,eventName,ref,workflow
        text: |
          üöÄ Cloudflare Container Deployment
          Status: ${{ job.status }}
          Repository: ${{ github.repository }}
          Branch: ${{ github.ref_name }}
          Commit: ${{ github.sha }}
          Author: ${{ github.actor }}
