{% extends "layouts/base.njk" %}

{% block bodyClass %}pdp-page{% endblock %}

{% block content %}
<div class="pdp">
    <div class="pdp__container">
        {% if product %}
        <div class="pdp__content">
            {# Product Gallery #}
            <div class="pdp__gallery">
                <div class="product-gallery">
                    {% if product.media and product.media.length > 0 %}
                    <div class="product-gallery__main">
                        <img 
                            src="{{ product.media[0].url }}"
                            alt="{{ product.media[0].alt | default(product.name) }}"
                            class="product-gallery__main-image"
                            loading="eager"
                        >
                    </div>
                    {% if product.media.length > 1 %}
                    <div class="product-gallery__thumbnails">
                        {% for image in product.media %}
                        <button class="product-gallery__thumbnail {{ 'product-gallery__thumbnail--active' if loop.first }}"
                                data-image-url="{{ image.url }}">
                            <img src="{{ image.url }}" alt="{{ image.alt | default(product.name) }}">
                        </button>
                        {% endfor %}
                    </div>
                    {% endif %}
                    {% else %}
                    <div class="product-gallery__main">
                        <div class="product-card__placeholder">
                            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
                                <rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect>
                                <circle cx="8.5" cy="8.5" r="1.5"></circle>
                                <polyline points="21,15 16,10 5,21"></polyline>
                            </svg>
                        </div>
                    </div>
                    {% endif %}
                </div>
            </div>

            {# Product Details #}
            <div class="pdp__details">
                <div class="product-details">
                    {% if product.brand %}
                    <div class="product-details__brand">{{ product.brand.name }}</div>
                    {% endif %}
                    
                    <h1 class="product-details__title">{{ product.name }}</h1>
                    
                    {% if product.rating %}
                    <div class="product-details__rating">
                        <div class="rating">
                            {% for i in range(5) %}
                            <span class="rating__star {{ 'rating__star--filled' if i < product.rating }}">★</span>
                            {% endfor %}
                        </div>
                        {% if product.rating_count %}
                        <span class="product-details__rating-count">({{ product.rating_count }} reviews)</span>
                        {% endif %}
                    </div>
                    {% endif %}

                    {# Display price - use productPrice if available (size selected), otherwise use default price #}
                    {% if productPrice %}
                    <div class="product-details__price">
                        <span class="product-details__price-current">
                            {{ productPrice.price.currency_symbol }}{{ productPrice.price.selling | number_format }}
                        </span>
                        {% if productPrice.price.marked > productPrice.price.selling %}
                        <span class="product-details__price-original">
                            {{ productPrice.price.currency_symbol }}{{ productPrice.price.marked | number_format }}
                        </span>
                        {% if productPrice.discount %}
                        <span class="product-details__discount">{{ productPrice.discount }}% OFF</span>
                        {% endif %}
                        {% endif %}
                    </div>
                    {% elif product.sizes and product.sizes.price %}
                    <div class="product-details__price">
                        <span class="product-details__price-current">
                            {{ product.sizes.price.effective.currency_symbol | default('₹') }}{{ product.sizes.price.effective.min | number_format }}
                        </span>
                        {% if product.sizes.price.marked.min > product.sizes.price.effective.min %}
                        <span class="product-details__price-original">
                            {{ product.sizes.price.marked.currency_symbol | default('₹') }}{{ product.sizes.price.marked.min | number_format }}
                        </span>
                        {% set discount = ((product.sizes.price.marked.min - product.sizes.price.effective.min) / product.sizes.price.marked.min * 100) | round %}
                        {% if discount > 0 %}
                        <span class="product-details__discount">{{ discount }}% OFF</span>
                        {% endif %}
                        {% endif %}
                    </div>
                    {% elif product.price %}
                    <div class="product-details__price">
                        <span class="product-details__price-current">
                            {{ product.price.effective.currency_symbol | default('₹') }}{{ product.price.effective.min | number_format }}
                        </span>
                        {% if product.price.marked.min > product.price.effective.min %}
                        <span class="product-details__price-original">
                            {{ product.price.marked.currency_symbol | default('₹') }}{{ product.price.marked.min | number_format }}
                        </span>
                        {% set discount = ((product.price.marked.min - product.price.effective.min) / product.price.marked.min * 100) | round %}
                        {% if discount > 0 %}
                        <span class="product-details__discount">{{ discount }}% OFF</span>
                        {% endif %}
                        {% endif %}
                    </div>
                    {% elif product.attributes.min_price_effective %}
                    <div class="product-details__price">
                        <span class="product-details__price-current">
                            ₹{{ product.attributes.min_price_effective | number_format }}
                        </span>
                        {% if product.attributes.min_price_marked and product.attributes.min_price_marked > product.attributes.min_price_effective %}
                        <span class="product-details__price-original">
                            ₹{{ product.attributes.min_price_marked | number_format }}
                        </span>
                        {% endif %}
                    </div>
                    {% endif %}

                    {# Check stock status - if sizes exist, check if any size is available #}
                    {% set isInStock = false %}
                    {% if product.sizes and product.sizes.size_details and product.sizes.size_details.length > 0 %}
                        {% for size in product.sizes.size_details %}
                            {% if size.is_available and size.quantity > 0 %}
                                {% set isInStock = true %}
                            {% endif %}
                        {% endfor %}
                    {% elif product.sellable %}
                        {% set isInStock = true %}
                    {% endif %}
                    
                    {% if isInStock %}
                    <div class="inventory-status">
                        <div class="inventory-status__indicator inventory-status__indicator--in-stock"></div>
                        <span class="inventory-status__text inventory-status__text--in-stock">In Stock</span>
                    </div>
                    {% else %}
                    <div class="inventory-status">
                        <div class="inventory-status__indicator inventory-status__indicator--out-of-stock"></div>
                        <span class="inventory-status__text inventory-status__text--out-of-stock">Out of Stock</span>
                    </div>
                    {% endif %}

                    {% if product.short_description %}
                    <div class="product-details__description">
                        <p>{{ product.short_description }}</p>
                    </div>
                    {% endif %}

                    {# Size Selection Section #}
                    {% if product.sizes and product.sizes.size_details and product.sizes.size_details.length > 0 %}
                    <div class="product-sizes">
                        <div class="product-sizes__label">Select Size:</div>
                        <div class="product-sizes__options">
                            {% for size in product.sizes.size_details %}
                            <button class="product-sizes__option {{ 'product-sizes__option--selected' if selectedSize == size.display or (not selectedSize and loop.first) }}"
                                    data-size="{{ size.display }}"
                                    data-size-slug="{{ product.slug }}"
                                    {% if not size.is_available %}disabled{% endif %}>
                                {{ size.display }}
                            </button>
                            {% endfor %}
                        </div>
                        {% if productPrice %}
                        <div class="product-sizes__price-info">
                            <div class="product-details__price">
                                <span class="product-details__price-current">
                                    {{ productPrice.price.currency_symbol }}{{ productPrice.price.selling | number_format }}
                                </span>
                                {% if productPrice.price.marked > productPrice.price.selling %}
                                <span class="product-details__price-original">
                                    {{ productPrice.price.currency_symbol }}{{ productPrice.price.marked | number_format }}
                                </span>
                                {% if productPrice.discount %}
                                <span class="product-details__discount">{{ productPrice.discount }}% OFF</span>
                                {% endif %}
                                {% endif %}
                            </div>
                            {% if productPrice.delivery_promise %}
                            <div class="product-sizes__delivery">
                                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                                    <rect x="1" y="3" width="15" height="13"></rect>
                                    <polygon points="16,8 20,8 23,11 23,16 16,16"></polygon>
                                    <circle cx="5.5" cy="18.5" r="2.5"></circle>
                                    <circle cx="18.5" cy="18.5" r="2.5"></circle>
                                </svg>
                                Delivery in {{ productPrice.delivery_promise.min }}-{{ productPrice.delivery_promise.max }} days
                            </div>
                            {% endif %}
                        </div>
                        {% endif %}
                    </div>
                    {% endif %}

                    {# Variants Section #}
                    {% if product.has_variant and product.variants and product.variants.length > 0 %}
                    <div class="product-variants">
                        <div class="product-variants__group">
                            <div class="product-variants__label">Available Options:</div>
                            <div class="product-variants__options">
                                {% for variant in product.variants %}
                                <div class="product-variants__option {{ 'product-variants__option--selected' if loop.first }}">
                                    {{ variant.name }}
                                    {% if variant.price %}
                                    <small>(₹{{ variant.price.effective.min }})</small>
                                    {% endif %}
                                </div>
                                {% endfor %}
                            </div>
                        </div>
                    </div>
                    {% endif %}

                    {# Product Actions #}
                    <div class="product-actions">
                        <div class="product-actions__quantity">
                            <span class="product-actions__quantity-label">Quantity:</span>
                            <div class="product-actions__quantity-selector">
                                <button class="product-actions__quantity-btn" type="button" data-action="decrease">−</button>
                                <input class="product-actions__quantity-input" type="number" value="1" min="1" max="10">
                                <button class="product-actions__quantity-btn" type="button" data-action="increase">+</button>
                            </div>
                        </div>
                        
                        <div class="product-actions__buttons">
                            <button class="product-actions__add-to-cart btn-add-to-cart"
                                    data-product-id="{{ product.uid }}"
                                    {% if not isInStock %}disabled{% endif %}>
                                {% if isInStock %}
                                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" width="20" height="20">
                                    <circle cx="9" cy="21" r="1"></circle>
                                    <circle cx="20" cy="21" r="1"></circle>
                                    <path d="m1 1 4 4 16 0 1 13-17 0"></path>
                                </svg>
                                Add to Cart
                                {% else %}
                                Out of Stock
                                {% endif %}
                            </button>
                            
                            <button class="product-actions__wishlist product-card__wishlist"
                                    data-product-id="{{ product.uid }}"
                                    aria-label="Add to wishlist">
                                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
                                    <path d="m20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>
                                </svg>
                            </button>
                        </div>
                    </div>

                    {# Key Features/Highlights #}
                    {% if product.highlights and product.highlights.length > 0 %}
                    <div class="product-info">
                        <div class="product-info__attribute-group">
                            <h3 class="product-info__attribute-title">Key Features</h3>
                            <ul class="list-disc">
                                {% for highlight in product.highlights %}
                                <li>{{ highlight }}</li>
                                {% endfor %}
                            </ul>
                        </div>
                    </div>
                    {% endif %}

                    {# Product Attributes #}
                    {% if product.attributes %}
                    <div class="product-info">
                        <div class="product-info__attribute-group">
                            <h3 class="product-info__attribute-title">Product Details</h3>
                            <div class="product-info__attribute-list">
                                {% for key, value in product.attributes %}
                                <div class="product-info__attribute-item">
                                    <span class="product-info__attribute-key">{{ key | title }}:</span>
                                    <span class="product-info__attribute-value">{{ value }}</span>
                                </div>
                                {% endfor %}
                            </div>
                        </div>
                    </div>
                    {% endif %}
                </div>
            </div>
        </div>

        {# Product Information Tabs #}
        {% if product.description %}
        <div class="product-info">
            <div class="product-info__tabs">
                <button class="product-info__tab product-info__tab--active" data-tab="description">Description</button>
                {% if product.attributes %}
                <button class="product-info__tab" data-tab="specifications">Specifications</button>
                {% endif %}
                <button class="product-info__tab" data-tab="reviews">Reviews</button>
            </div>
            
            <div class="product-info__content" id="tab-description">
                <div class="product-description">
                    {{ product.description | safe }}
                </div>
            </div>
            
            {% if product.attributes %}
            <div class="product-info__content" id="tab-specifications" style="display: none;">
                <div class="product-info__attributes">
                    {% for key, value in product.attributes %}
                    <div class="product-info__attribute-item">
                        <span class="product-info__attribute-key">{{ key | title }}:</span>
                        <span class="product-info__attribute-value">{{ value }}</span>
                    </div>
                    {% endfor %}
                </div>
            </div>
            {% endif %}
            
            <div class="product-info__content" id="tab-reviews" style="display: none;">
                <div class="text-center">
                    <p class="text-muted">Customer reviews will be displayed here.</p>
                    {% if product.rating_count %}
                    <p>Based on {{ product.rating_count }} customer reviews.</p>
                    {% endif %}
                </div>
            </div>
        </div>
        {% endif %}
        {% endif %}

        {# Related Products #}
        {% if relatedProducts and relatedProducts.length > 0 %}
        <section class="related-products">
            <h2 class="related-products__title">You May Also Like</h2>
            <div class="related-products__grid">
                {% for product in relatedProducts %}
                {% include "partials/product-card.njk" %}
                {% endfor %}
            </div>
        </section>
        {% endif %}
    </div>
</div>
{% endblock %}

{% block styles %}
<style>
    /* Size selection styles */
    .product-sizes {
        margin: 20px 0;
    }
    
    .product-sizes__label {
        font-weight: 600;
        margin-bottom: 12px;
        color: #333;
    }
    
    .product-sizes__options {
        display: flex;
        gap: 12px;
        flex-wrap: wrap;
        margin-bottom: 16px;
    }
    
    .product-sizes__option {
        padding: 12px 24px;
        border: 2px solid #ddd;
        background: white;
        cursor: pointer;
        border-radius: 8px;
        font-weight: 500;
        transition: all 0.2s ease;
        min-width: 80px;
        text-align: center;
    }
    
    .product-sizes__option:hover:not(:disabled) {
        border-color: #333;
        background-color: #f5f5f5;
    }
    
    .product-sizes__option--selected {
        background-color: #333 !important;
        color: white !important;
        border-color: #333 !important;
    }
    
    .product-sizes__option:disabled {
        opacity: 0.5;
        cursor: not-allowed;
        background-color: #f0f0f0;
    }
    
    .product-sizes__price-info {
        padding: 16px;
        background-color: #f9f9f9;
        border-radius: 8px;
        margin-top: 12px;
    }
    
    .product-sizes__delivery {
        display: flex;
        align-items: center;
        gap: 8px;
        margin-top: 8px;
        color: #666;
        font-size: 14px;
    }
    
    .loading {
        color: #666;
        padding: 12px;
        text-align: center;
    }
    
    .error {
        color: #d32f2f;
        padding: 12px;
        text-align: center;
    }
</style>
{% endblock %}

{% block scripts %}
<script>
// Size selection and dynamic price fetching
document.addEventListener('DOMContentLoaded', function() {
    const sizeButtons = document.querySelectorAll('.product-sizes__option:not([disabled])');
    const priceInfoSection = document.querySelector('.product-sizes__price-info');
    
    // Function to handle size selection
    async function selectSize(button) {
        // Don't do anything if this size is already selected
        if (button.classList.contains('product-sizes__option--selected')) {
            return;
        }
        
        // Remove selected class from all buttons
        sizeButtons.forEach(btn => btn.classList.remove('product-sizes__option--selected'));
        
        // Add selected class to clicked button
        button.classList.add('product-sizes__option--selected');
        
        // Get size and product slug
        const size = button.dataset.size;
        const slug = button.dataset.sizeSlug;
        
        // Update URL with size query parameter
        const url = new URL(window.location);
        url.searchParams.set('size', size);
        window.history.pushState({}, '', url);
        
        // Show loading state
        if (priceInfoSection) {
            priceInfoSection.innerHTML = '<div class="loading">Loading price...</div>';
        }
        
        try {
            // Fetch price for selected size
            const response = await fetch(`/product/api/${slug}/price?size=${encodeURIComponent(size)}`);
            const data = await response.json();
            
            if (data.success && data.data) {
                updatePriceDisplay(data.data);
            } else {
                console.error('Failed to fetch price');
                if (priceInfoSection) {
                    priceInfoSection.innerHTML = '<div class="error">Unable to fetch price</div>';
                }
            }
        } catch (error) {
            console.error('Error fetching price:', error);
            if (priceInfoSection) {
                priceInfoSection.innerHTML = '<div class="error">Unable to fetch price</div>';
            }
        }
    }
    
    // Add click event listeners to all size buttons
    sizeButtons.forEach(button => {
        button.addEventListener('click', function(e) {
            e.preventDefault();
            selectSize(this);
        });
    });
    
    function updatePriceDisplay(priceData) {
        if (!priceInfoSection) return;
        
        let html = '<div class="product-details__price">';
        
        // Current price
        html += `<span class="product-details__price-current">
                    ${priceData.price.currency_symbol}${formatNumber(priceData.price.selling)}
                 </span>`;
        
        // Original price and discount
        if (priceData.price.marked > priceData.price.selling) {
            html += `<span class="product-details__price-original">
                        ${priceData.price.currency_symbol}${formatNumber(priceData.price.marked)}
                     </span>`;
            
            if (priceData.discount) {
                html += `<span class="product-details__discount">${priceData.discount}% OFF</span>`;
            }
        }
        
        html += '</div>';
        
        // Delivery promise
        if (priceData.delivery_promise) {
            html += `<div class="product-sizes__delivery">
                        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                            <rect x="1" y="3" width="15" height="13"></rect>
                            <polygon points="16,8 20,8 23,11 23,16 16,16"></polygon>
                            <circle cx="5.5" cy="18.5" r="2.5"></circle>
                            <circle cx="18.5" cy="18.5" r="2.5"></circle>
                        </svg>
                        Delivery in ${priceData.delivery_promise.min}-${priceData.delivery_promise.max} days
                     </div>`;
        }
        
        // Stock availability
        if (priceData.quantity !== undefined) {
            const stockStatus = priceData.quantity > 0 ? 'in-stock' : 'out-of-stock';
            const stockText = priceData.quantity > 0 ? `${priceData.quantity} in stock` : 'Out of stock';
            html += `<div class="product-sizes__stock product-sizes__stock--${stockStatus}">
                        ${stockText}
                     </div>`;
        }
        
        priceInfoSection.innerHTML = html;
        
        // Update add to cart button state
        const addToCartBtn = document.querySelector('.btn-add-to-cart');
        if (addToCartBtn) {
            addToCartBtn.disabled = priceData.quantity === 0;
            addToCartBtn.textContent = priceData.quantity > 0 ? 'Add to Cart' : 'Out of Stock';
        }
    }
    
    function formatNumber(num) {
        return new Intl.NumberFormat('en-IN').format(num);
    }
    
    // Handle direct URL with size parameter on page load
    const urlParams = new URLSearchParams(window.location.search);
    const sizeParam = urlParams.get('size');
    
    // If we have a size in the URL and it's different from the selected size, trigger a selection
    if (sizeParam) {
        const targetButton = document.querySelector(`.product-sizes__option[data-size="${sizeParam}"]`);
        const currentSelected = document.querySelector('.product-sizes__option--selected');
        
        // If the target button exists and is not already selected
        if (targetButton && !targetButton.disabled && targetButton !== currentSelected) {
            // Remove selected class from all buttons
            sizeButtons.forEach(btn => btn.classList.remove('product-sizes__option--selected'));
            // Add selected class to the target button
            targetButton.classList.add('product-sizes__option--selected');
        }
    }
    
    // Log for debugging
    console.log('Size selection initialized. URL size param:', sizeParam);
});

// Product gallery functionality
document.addEventListener('DOMContentLoaded', function() {
    const thumbnails = document.querySelectorAll('.product-gallery__thumbnail');
    const mainImage = document.querySelector('.product-gallery__main-image');
    
    thumbnails.forEach(thumbnail => {
        thumbnail.addEventListener('click', function() {
            // Remove active class from all thumbnails
            thumbnails.forEach(thumb => thumb.classList.remove('product-gallery__thumbnail--active'));
            
            // Add active class to clicked thumbnail
            this.classList.add('product-gallery__thumbnail--active');
            
            // Update main image
            if (mainImage) {
                mainImage.src = this.dataset.imageUrl;
            }
        });
    });
});

// Product tabs functionality
document.addEventListener('DOMContentLoaded', function() {
    const tabs = document.querySelectorAll('.product-info__tab');
    const tabContents = document.querySelectorAll('.product-info__tab-content');
    
    tabs.forEach(tab => {
        tab.addEventListener('click', function() {
            const tabName = this.dataset.tab;
            
            // Remove active class from all tabs and contents
            tabs.forEach(t => t.classList.remove('product-info__tab--active'));
            tabContents.forEach(content => content.classList.remove('product-info__tab-content--active'));
            
            // Add active class to clicked tab and corresponding content
            this.classList.add('product-info__tab--active');
            const activeContent = document.querySelector(`.product-info__tab-content[data-tab="${tabName}"]`);
            if (activeContent) {
                activeContent.classList.add('product-info__tab-content--active');
            }
        });
    });
});

// Quantity selector
document.addEventListener('DOMContentLoaded', function() {
    const decreaseBtn = document.querySelector('[data-action="decrease"]');
    const increaseBtn = document.querySelector('[data-action="increase"]');
    const quantityInput = document.querySelector('.product-actions__quantity-input');
    
    if (decreaseBtn && increaseBtn && quantityInput) {
        decreaseBtn.addEventListener('click', () => {
            const currentValue = parseInt(quantityInput.value);
            if (currentValue > 1) {
                quantityInput.value = currentValue - 1;
            }
        });
        
        increaseBtn.addEventListener('click', () => {
            const currentValue = parseInt(quantityInput.value);
            const maxValue = parseInt(quantityInput.max);
            if (currentValue < maxValue) {
                quantityInput.value = currentValue + 1;
            }
        });
    }
});
</script>
{% endblock %}